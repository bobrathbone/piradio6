#!/bin/bash 
#set -e
# Radio daemon post install script
# $Id: piradio.postinst,v 1.19 2024/06/18 08:23:59 bob Exp $
# Support for Pulseaudio added

# Version 7.5 onwards allows any user with sudo permissions to install the software
USR=$(logname)
GRP=$(id -g -n ${USR})

# File locations
SHARE=/usr/share
DIR=${SHARE}/radio
RADIOLIB=/var/lib/radiod
BOOTCMD=/boot/cmdline.txt 
MODULES=/etc/modules
MPDCONF=/etc/mpd.conf
VOICEDIST=voice.dist
LANGUAGEFILE=language/language.en
RSSFILE=rss/rss
CONFIGFILE=/etc/radiod.conf
DEFAULTRCS=/etc/default/rcS
EQUALIZERCMD=equalizer.cmd
LOGDIR=/var/log/radiod
RUNLOGDIR=${DIR}/logs
PLAYLIST_LOG=${DIR}/logs
PIDDIR=/var/run/radiod
MPD_PLAYLISTS=/var/lib/mpd/playlists

USR=$(logname)
GRP=$(id -g -n ${USR})

# Configure radio but skip any other package installation or removal
# with the -s flag
CONFIGURATOR="configure_radio.sh -s"

# Check if the script is being run as root
if [[ $EUID -ne 0 ]]
then
    printf 'This script must be run using sudo.\nExiting..\n'
    exit 1
fi

# Set up a default radio lib directory
if [[ ! -d ${RADIOLIB} ]];then
    sudo mkdir -p ${RADIOLIB}
fi

# Set daemon startup defaults
sudo systemctl enable radiod.service
if [[ $? != 0 ]]; then
	echo "Error: Failed to enable radiod.service"
fi

# Ensure owner is current sudo user
sudo chown -R ${USR}:${GRP} ${DIR}
sudo chmod +x ${DIR}/*.py
sudo chmod +x ${DIR}/*.sh

# Create configuration file in /etc
if [[ ! -f   ${CONFIGFILE} ]]; then
	sudo cp -f ${DIR}/radiod.conf ${CONFIGFILE}
fi

# Set up radio daemon
${DIR}/${CONFIGURATOR}
if [[ $? != 0 ]]; then
	echo "${DIR}/${CONFIGURATOR} script failed"
	exit 1
fi

# Copy equalizer.cmd
if [[ ! -f  ${RADIOLIB}/${EQUALIZERCMD} ]]; then
	echo "Copying ${EQUALIZERCMD} to  ${RADIOLIB}" 
	sudo cp -f ${DIR}/${EQUALIZERCMD} ${RADIOLIB}/${EQUALIZERCMD} 
fi

echo "Disabling serial interface in ${BOOTCMD}" 
if [[ ! -f   ${BOOTCMD}.orig ]]; then
	sudo cp -f ${BOOTCMD} ${BOOTCMD}.orig
fi

OLDENTRY="console=serial0,115200"
sudo sed -i "s/${OLDENTRY}//g" ${BOOTCMD}
REBOOT=1

# Replace /etc/mpd.conf if corrupt
grep ^audio_out /etc/mpd.conf >/dev/null 2>&1
if [[ $? != 0 ]]; then
    echo "Replacing corrupt ${MPDCONF} with ${DIR}/mpd.conf"
    sudo cp ${DIR}/mpd.conf ${MPDCONF}
fi

# Replace /etc/mpd.conf.orig if corrupt
grep ^audio_out /etc/mpd.conf.orig >/dev/null 2>&1
if [[ $? != 0 ]]; then
    echo "Replacing corrupt ${MPDCONF}.orig with ${DIR}/mpd.conf"
    sudo cp ${DIR}/mpd.conf ${MPDCONF}.orig
fi

# Configure the MPD daemon
if [[ ! -f ${MPDCONF}.orig ]]; then
	echo "Modifying ${MPDCONF}"
	sudo cp -fp ${MPDCONF} ${MPDCONF}.orig

	# Bind to any address
	OLDENTRY="bind_to_address"
	NEWENTRY="bind_to_address \"any\""  
	sudo sed -i "s/^${OLDENTRY}.*/${NEWENTRY}/g" ${MPDCONF}

	# Disable zeroconf
	OLDENTRY="\#zeroconf_enabled.*"
	NEWENTRY="zeroconf_enabled \"no\""

	# Add note to the end of file
	sudo sed -i "s/^${OLDENTRY}.*/${NEWENTRY}/g" ${MPDCONF}
	echo "# Original file stored as ${MPDCONF}.orig" >> ${MPDCONF} 
fi

# Disable MPD on startup
systemctl disable mpd

# Go to radio directory
cd ${DIR}

# Copy espeak command to the radio lib directory
if [[ ! -f "${RADIOLIB}/voice" ]]; then
	echo "Copying ${VOICEDIST} to ${RADIOLIB}/voice"
	mkdir -p ${RADIOLIB}
	cp -f ${VOICEDIST} ${RADIOLIB}/voice
fi

# Copy language file
if [[ ! -f "${RADIOLIB}/language" ]]; then
	echo "Copying ${LANGUAGEFILE} to ${RADIOLIB}/language"
	mkdir -p ${RADIOLIB}
	cp -f ${LANGUAGEFILE} ${RADIOLIB}/language
fi

# Copy RSS file
if [[ ! -f "${RADIOLIB}/rss" ]]; then
	echo "Copying ${RSSFILE} to ${RADIOLIB}/rss"
	mkdir -p ${RADIOLIB}
	cp -f ${RSSFILE} ${RADIOLIB}/rss
fi

# Create playlists if no station list present
if [[ ! -f "${RADIOLIB}/stationlist" ]]; then
    sudo mkdir -p ${RUNLOGDIR}
    sudo chown ${USR}:${GRP} ${RUNLOGDIR}
	echo "Creating playlists:"
	echo "This will take a few minutes"
	${DIR}/create_stations.py --no_delete 2>&1 > ${RUNLOGDIR}/playlists.log
	echo "Done: See ${RUNLOGDIR}/playlists.log for information about playlists created"
	echo
fi

# Rename old style radio playlists (remove '_' at start of file name)
ls ${MPD_PLAYLISTS}/_* >/dev/null 2>&1
if [[ $? == 0 ]]; then
    echo
    echo "Old style radio playlists found in ${MPD_PLAYLISTS}"
    for file in ${MPD_PLAYLISTS}/_*
    do
        file_name=$(basename ${file})
        blank=''
        new_name=${file_name/_/${blank}}
        cmd="sudo mv ${MPD_PLAYLISTS}/${file_name} ${MPD_PLAYLISTS}/${new_name}"
        echo ${cmd}
        ${cmd}
        if [[ $? == 0 ]]; then
            echo "Playlist ${file_name} renamed as ${new_name}"
        else
            echo "Error: Failed to rename ${file_name} as ${new_name}"
        fi
    done

fi

# Remove leading '_' from startup playlist name
grep '^startup=_' ${CONFIGFILE} 
if [[ $? == 0 ]]; then
    echo "Removing leading underscore from startup playlist paramter in ${CONFIGFILE}" 
    sudo sed -i -e 's/^startup=_/startup=/' ${CONFIGFILE}
fi

# Force file checks on reboot
if [[ ! -f ${DEFAULTRCS}.orig && -f ${DEFAULTRCS}.orig ]]; then
        sudo cp -f -p ${DEFAULTRCS} ${DEFAULTRCS}.orig
        sudo sed -i -e 's/\#FSCKFIX=no/FSCKFIX=yes/' ${DEFAULTRCS}
fi

ln -fs /usr/share/radio /home/pi/radio

# Add www-data to sudoers to allow appache to run shoutcast program
SUDO_ENTRY="www-data ALL=(ALL) NOPASSWD: /usr/share/radio/get_shoutcast.py"
echo ${SUDO_ENTRY} | sudo tee /etc/sudoers.d/www-data

# Create new logging directory and move old log into it
if [[ ! -d ${LOGDIR} ]]; then
    echo "Moving logging to new directory ${LOGDIR}"
    sudo mkdir -p ${LOGDIR}
    sudo chown ${USR}:${GRP} ${LOGDIR}
    if [[ -f /var/log/radio.log ]]; then
        sudo mv /var/log/radio.log ${LOGDIR}/.
    fi
fi
sudo touch ${LOGDIR}/radio.log
sudo chown ${USR}:${GRP} ${LOGDIR}/radio.log

echo
echo "PI Radio software successfully installed"
echo "See /usr/share/doc/radiod/README for release information"
echo

echo "Installation complete"
if [[ REBOOT -eq 1 ]]; then
	echo "It is necessary to reboot the system to start the radio"
fi

exit 0

# End of post-installation script
